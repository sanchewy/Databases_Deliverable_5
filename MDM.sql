-- MySQL Script generated by MySQL Workbench
-- Thu Nov 30 11:28:46 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema MovieDataModel
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema MovieDataModel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `MovieDataModel` DEFAULT CHARACTER SET utf8 ;
USE `MovieDataModel` ;

-- -----------------------------------------------------
-- Table `MovieDataModel`.`Person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Person` (
  `n_const` VARCHAR(9) NOT NULL,
  `first_name` VARCHAR(128) NULL,
  `last_name` VARCHAR(128) NULL,
  `birth_year` VARCHAR(4) NULL,
  `death_year` VARCHAR(4) NULL,
  PRIMARY KEY (`n_const`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Title`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Title` (
  `t_const` VARCHAR(9) NOT NULL,
  `start_year` YEAR NULL,
  `runtime` FLOAT NULL,
  `is_adult` TINYINT NULL,
  `primary_title` VARCHAR(128) NOT NULL,
  `original_title` VARCHAR(128) NULL,
  PRIMARY KEY (`t_const`),
  INDEX `Foreign` (`primary_title` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Actor` (
  `t_const_Actor` VARCHAR(9) NOT NULL,
  `n_const_Actor` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`t_const_Actor`, `n_const_Actor`),
  CONSTRAINT `actor_person_fk`
    FOREIGN KEY (`n_const_Actor`)
    REFERENCES `MovieDataModel`.`Person` (`n_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `actor_title_fk`
    FOREIGN KEY (`t_const_Actor`)
    REFERENCES `MovieDataModel`.`Title` (`t_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Producer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Producer` (
  `t_const_Performer` VARCHAR(9) NOT NULL,
  `n_const_Performer` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`t_const_Performer`, `n_const_Performer`),
  CONSTRAINT `performer_person_fk`
    FOREIGN KEY (`n_const_Performer`)
    REFERENCES `MovieDataModel`.`Person` (`n_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `performer_title_fk`
    FOREIGN KEY (`t_const_Performer`)
    REFERENCES `MovieDataModel`.`Title` (`t_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Writer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Writer` (
  `t_const_Writer` VARCHAR(9) NOT NULL,
  `n_const_Writer` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`t_const_Writer`, `n_const_Writer`),
  CONSTRAINT `writer_person_fk`
    FOREIGN KEY (`n_const_Writer`)
    REFERENCES `MovieDataModel`.`Person` (`n_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `writer_title_fk`
    FOREIGN KEY (`t_const_Writer`)
    REFERENCES `MovieDataModel`.`Title` (`t_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Director` (
  `t_const_Director` VARCHAR(9) NOT NULL,
  `n_const_Director` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`t_const_Director`, `n_const_Director`),
  CONSTRAINT `director_person_fk`
    FOREIGN KEY (`n_const_Director`)
    REFERENCES `MovieDataModel`.`Person` (`n_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `director_title_fk`
    FOREIGN KEY (`t_const_Director`)
    REFERENCES `MovieDataModel`.`Title` (`t_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Genre` (
  `title` VARCHAR(128) NOT NULL,
  `genre` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`title`, `genre`),
  CONSTRAINT `genre_fk`
    FOREIGN KEY (`title`)
    REFERENCES `MovieDataModel`.`Title` (`primary_title`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Movie` (
  `movie_title` VARCHAR(128) NOT NULL,
  `num_critic_for_reviews` INT(10) NULL,
  `duration` INT(10) NULL,
  `director_facebook_likes` INT(10) NULL,
  `actor_1_facebook_likes` INT(10) NULL,
  `actor_2_facebook_likes` INT(10) NULL,
  `actor_3_facebook_likes` INT(10) NULL,
  `gross` INT(10) NULL,
  `title_year` INT(4) NULL,
  `num_voted_users` INT(10) NULL,
  `plot_keywords` LONGTEXT NULL DEFAULT NULL,
  `num_user_for_reviews` INT(10) NULL,
  `budget` INT(10) NULL,
  PRIMARY KEY (`movie_title`),
  CONSTRAINT `movie_fk`
    FOREIGN KEY (`movie_title`)
    REFERENCES `MovieDataModel`.`Title` (`primary_title`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Short`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Short` (
  `t_const_ShortFK` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`t_const_ShortFK`),
  CONSTRAINT `short_fk`
    FOREIGN KEY (`t_const_ShortFK`)
    REFERENCES `MovieDataModel`.`Title` (`t_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`TV_Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`TV_Movie` (
  `t_const_TVFK` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`t_const_TVFK`),
  CONSTRAINT `tvMovie_fk`
    FOREIGN KEY (`t_const_TVFK`)
    REFERENCES `MovieDataModel`.`Title` (`t_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`TV_Series`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`TV_Series` (
  `t_const` VARCHAR(9) NOT NULL,
  `season_num` INT(4) NULL,
  `episode_num` INT(5) NULL,
  PRIMARY KEY (`t_const`),
  CONSTRAINT `tvSeries_fk`
    FOREIGN KEY (`t_const`)
    REFERENCES `MovieDataModel`.`Title` (`t_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieDataModel`.`Votes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MovieDataModel`.`Votes` (
  `t_const_VotesFK` VARCHAR(9) NOT NULL,
  `num_votes` INT NULL,
  `average_rating` INT NULL,
  PRIMARY KEY (`t_const_VotesFK`),
  INDEX `fk_Votes_Title1_idx` (`t_const_VotesFK` ASC),
  CONSTRAINT `votes_fk`
    FOREIGN KEY (`t_const_VotesFK`)
    REFERENCES `MovieDataModel`.`Title` (`t_const`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
